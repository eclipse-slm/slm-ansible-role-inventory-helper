#- name: Init Variables for add_host task
#  ansible.builtin.set_fact:
#    ansible_inventory:
#       name: ''
#       groups: []
#       ansible_connection: ''
#       ansible_ssh_user: ''
#       ansible_ssh_pass: ''
#       ansible_port: ''
#       ansible_become_pass: ''
#       ansible_python_interpreter: '/usr/bin/python3'
#       ansible_ssh_common_args: '-o StrictHostKeyChecking=no'

- name: Extract connection service object from api return
  ansible.builtin.set_fact:
    service: "{{ item }}"

- name: Process Remote Access Service
  ansible.builtin.include_tasks: actions/process_remote_access_service.yml
  when:
    -  supported_connection_types_only_remote | length > 0
    - '"RemoteAccessService" in service.ServiceTags'

- name: Process None-Remote Access Service
  when: 'not "RemoteAccessService" in service.ServiceTags'
  block:
    - name: Process None-Remote Access Service
      when:
        - supported_connection_types_without_remote | length > 0
        - service.ServiceMeta.connectionType != 'null'
        - service.ServiceMeta.connectionType in supported_connection_types_without_remote
      include_tasks: process_non_remote_access_service.yml

    - name: Delegate to Remote Acccess Service of node
      when:
        - (supported_connection_types_without_remote | length == 0) or (service.ServiceMeta.connectionType == 'null') or (not service.ServiceMeta.connectionType in supported_connection_types_without_remote)
        - supported_connection_types_only_remote | length > 0
      include_tasks: process_delegated_remote_access_service.yml

- name: Build groups list for host
  set_fact:
    host_groups: "{{ (extra_groups | default([])) + ansible_inventory.groups }}"

- name: Add Item to ansible Inventory
  ansible.builtin.add_host:
    # GENERAL
    name:                       "{{ ansible_inventory.name }}"
    groups:                     "{{ host_groups }}"
    ansible_connection:         "{{ ansible_inventory.ansible_connection }}"
    ansible_port:               "{{ ansible_inventory.ansible_port }}"
    ansible_shell_type:         "{{ ansible_inventory.ansible_shell_type }}"
    ansible_python_interpreter: "{{ ansible_inventory.ansible_python_interpreter }}"
    ansible_user:               "{{ ansible_inventory.ansible_user }}"
    ansible_password:           "{{ ansible_inventory.ansible_password }}"
    # BECOME
    ansible_become_user:    "{{ ansible_inventory.ansible_become_user }}"
    ansible_become_pass:    "{{ ansible_inventory.ansible_become_pass }}"
    ansible_become_method:  "{{ ansible_inventory.ansible_become_method }}"
    # SSH
    ansible_ssh_user:         "{{ ansible_inventory.ansible_ssh_user }}"
    ansible_ssh_password:     "{{ ansible_inventory.ansible_ssh_password }}"
    ansible_ssh_port:         "{{ ansible_inventory.ansible_ssh_port }}"
    ansible_ssh_common_args:  "{{ ansible_inventory.ansible_ssh_common_args }}"
    ansible_ssh_retries:      "{{ ansible_inventory.ansible_ssh_retries }}"
    # WinRM
    ansible_winrm_port:                   "{{ ansible_inventory.ansible_winrm_port }}"
    ansible_winrm_transport:              "{{ ansible_inventory.ansible_winrm_transport }}"
    ansible_winrm_connection_timeout_sec: "{{ ansible_inventory.ansible_winrm_connection_timeout_sec }}"
    ansible_winrm_operation_timeout_sec:  "{{ ansible_inventory.ansible_winrm_operation_timeout_sec }}"
    ansible_winrm_read_timeout_sec:       "{{ ansible_inventory.ansible_winrm_read_timeout_sec }}"
    ansible_winrm_server_cert_validation: "{{ ansible_inventory.ansible_winrm_server_cert_validation }}"
    # PSRP
    ansible_psrp_port:                  "{{ ansible_inventory.ansible_psrp_port }}"
    ansible_psrp_connection_timeout:    "{{ ansible_inventory.ansible_psrp_connection_timeout }}"
    ansible_psrp_operation_timeout:     "{{ ansible_inventory.ansible_psrp_operation_timeout }}"
    ansible_psrp_read_timeout:          "{{ ansible_inventory.ansible_psrp_read_timeout }}"
    ansible_psrp_reconnection_retries:  "{{ ansible_inventory.ansible_psrp_reconnection_retries }}"
    ansible_psrp_cert_validation:       "{{ ansible_inventory.ansible_psrp_cert_validation }}"
    # Consul/Vault data
    consul_service_meta:    "{{ consul_service_meta }}"
    vault_service_secrets:  "{{ vault_service_secrets }}"
  when: ansible_inventory.name is defined